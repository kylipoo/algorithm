cmake_minimum_required(VERSION 3.21)
project(algorithm)

set(CMAKE_CXX_STANDARD 14)

add_subdirectory("${PROJECT_SOURCE_DIR}/aw837_graph_count_nodes" "${PROJECT_SOURCE_DIR}/aw837_graph_count_nodes/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw240-graph_foodchain" "${PROJECT_SOURCE_DIR}/aw240-graph_foodchain/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw838_heap_down" "${PROJECT_SOURCE_DIR}/aw838_heap_down/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw839_simulate_heap" "${PROJECT_SOURCE_DIR}/aw839_simulate_heap/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw841_hash_string" "${PROJECT_SOURCE_DIR}/aw841_hash_string/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw826_single_linkedlist" "${PROJECT_SOURCE_DIR}/aw826_single_linkedlist/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw840a_simulate_hashMap_linkedlist" "${PROJECT_SOURCE_DIR}/aw840a_simulate_hashMap_linkedlist/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw840b_simulate_hashMap_findOpenSpot" "${PROJECT_SOURCE_DIR}/aw840b_simulate_hashMap_findOpenSpot/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw785_quicksort" "${PROJECT_SOURCE_DIR}/aw785_quicksort/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw786_quickselect" "${PROJECT_SOURCE_DIR}/aw786_quickselect/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw787_mergeSort" "${PROJECT_SOURCE_DIR}/aw787_mergeSort/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw788_inversepair" "${PROJECT_SOURCE_DIR}/aw788_inversepair/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw789_bs_range" "${PROJECT_SOURCE_DIR}/aw789_bs_range/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw790_bs_floating" "${PROJECT_SOURCE_DIR}/aw790_bs_floating/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw791_add_two_numbers" "${PROJECT_SOURCE_DIR}/aw791_add_two_numbers/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw792_substract_two_numbers" "${PROJECT_SOURCE_DIR}/aw792_substract_two_numbers/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw793_mult_two_numbers" "${PROJECT_SOURCE_DIR}/aw793_mult_two_numbers/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw794_div_two_numbers" "${PROJECT_SOURCE_DIR}/aw794_div_two_numbers/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw795_prefix_sum" "${PROJECT_SOURCE_DIR}/aw795_prefix_sum/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw796_grid_sum" "${PROJECT_SOURCE_DIR}/aw796_grid_sum/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw797_array_of_difference" "${PROJECT_SOURCE_DIR}/aw797_array_of_difference/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw798_grid_of_difference" "${PROJECT_SOURCE_DIR}/aw798_grid_of_difference/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw0_parse_strings" "${PROJECT_SOURCE_DIR}/aw0_parse_strings/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw799_longest_norepeat_subarray" "${PROJECT_SOURCE_DIR}/aw799_longest_norepeat_subarray/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw800_sum_of_array_elements" "${PROJECT_SOURCE_DIR}/aw800_sum_of_array_elements/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw2816_find_subarray" "${PROJECT_SOURCE_DIR}/aw2816_find_subarray/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw801_find_one_in_binary" "${PROJECT_SOURCE_DIR}/aw801_find_one_in_binary/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw802_sum_of_range" "${PROJECT_SOURCE_DIR}/aw802_sum_of_range/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw803_merge_intervals" "${PROJECT_SOURCE_DIR}/aw803_merge_intervals/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw827_double_linkedlist" "${PROJECT_SOURCE_DIR}/aw827_double_linkedlist/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw828_stack_simulation" "${PROJECT_SOURCE_DIR}/aw828_stack_simulation/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw829_queue_simulation" "${PROJECT_SOURCE_DIR}/aw829_queue_simulation/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw830_monotonic_stack" "${PROJECT_SOURCE_DIR}/aw830_monotonic_stack/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw831_kmp" "${PROJECT_SOURCE_DIR}/aw831_kmp/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw835_trie" "${PROJECT_SOURCE_DIR}/aw835_trie/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw836_union_find_disjoint_set" "${PROJECT_SOURCE_DIR}/aw836_union_find_disjoint_set/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw154_slide_window_monotonic_queue" "${PROJECT_SOURCE_DIR}/aw154_slide_window_monotonic_queue/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw3302_expression_inorder" "${PROJECT_SOURCE_DIR}/aw3302_expression_inorder/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw143_trie_xor_pair" "${PROJECT_SOURCE_DIR}/aw143_trie_xor_pair/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/lc214_hash_string_shortest_palindrome" "${PROJECT_SOURCE_DIR}/lc214_hash_string_shortest_palindrome/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw843_dfs_8queen" "${PROJECT_SOURCE_DIR}/aw843_dfs_8queen/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw844_bfs_maze" "${PROJECT_SOURCE_DIR}/aw844_bfs_maze/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw845_bfs_8number_game" "${PROJECT_SOURCE_DIR}/aw845_bfs_8number_game/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw846_dfs_center_mass" "${PROJECT_SOURCE_DIR}/aw846_dfs_center_mass/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw847_bfs_shortest_path" "${PROJECT_SOURCE_DIR}/aw847_bfs_shortest_path/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw848_bfs_topological_sequence" "${PROJECT_SOURCE_DIR}/aw848_bfs_topological_sequence/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw849_graph_dijkstra" "${PROJECT_SOURCE_DIR}/aw849_graph_dijkstra/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw850_graph_dijkstra_priority_queue" "${PROJECT_SOURCE_DIR}/aw850_graph_dijkstra_priority_queue/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw853_bellman_ford_shortest_path" "${PROJECT_SOURCE_DIR}/aw853_bellman_ford_shortest_path/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw851_spfa_shortest_path" "${PROJECT_SOURCE_DIR}/aw851_spfa_shortest_path/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw852_spfa_negative_circle_exist" "${PROJECT_SOURCE_DIR}/aw852_spfa_negative_circle_exist/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw858_prim_find_shortest_weight_tree" "${PROJECT_SOURCE_DIR}/aw858_prim_find_shortest_weight_tree/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw859_kruskal_smallest_tree" "${PROJECT_SOURCE_DIR}/aw859_kruskal_smallest_tree/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw860_bipartite_coloring_graph" "${PROJECT_SOURCE_DIR}/aw860_bipartite_coloring_graph/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw861_hungarian_biggest_match_number" "${PROJECT_SOURCE_DIR}/aw861_hungarian_biggest_match_number/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw866_is_prime" "${PROJECT_SOURCE_DIR}/aw866_is_prime/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw867_prime_factor" "${PROJECT_SOURCE_DIR}/aw867_prime_factor/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw868_filter_prime_factors" "${PROJECT_SOURCE_DIR}/aw868_filter_prime_factors/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw869_common_divisor" "${PROJECT_SOURCE_DIR}/aw869_common_divisor/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw870_number_common_divisor" "${PROJECT_SOURCE_DIR}/aw870_number_common_divisor/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw871_sum_common_divisors" "${PROJECT_SOURCE_DIR}/aw871_sum_common_divisors/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw872_biggest_common_divisor" "${PROJECT_SOURCE_DIR}/aw872_biggest_common_divisor/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw873_totient_function" "${PROJECT_SOURCE_DIR}/aw873_totient_function/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw874_euler_function_filter" "${PROJECT_SOURCE_DIR}/aw874_euler_function_filter/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw875_exponentiation_squaring" "${PROJECT_SOURCE_DIR}/aw875_exponentiation_squaring/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw876_exponentiation_squaring_inverse" "${PROJECT_SOURCE_DIR}/aw876_exponentiation_squaring_inverse/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw877_euclidean_expand_x_y" "${PROJECT_SOURCE_DIR}/aw877_euclidean_expand_x_y/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw878_congruence_equation" "${PROJECT_SOURCE_DIR}/aw878_congruence_equation/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw885_combination1" "${PROJECT_SOURCE_DIR}/aw885_combination1/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw886_combination2" "${PROJECT_SOURCE_DIR}/aw886_combination2/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw887_combination3_lucas" "${PROJECT_SOURCE_DIR}/aw887_combination3_lucas/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw888_combination4" "${PROJECT_SOURCE_DIR}/aw888_combination4/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw889_catalan_number" "${PROJECT_SOURCE_DIR}/aw889_catalan_number/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw890_inclusion_exclusion_principle" "${PROJECT_SOURCE_DIR}/aw890_inclusion_exclusion_principle/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw901_dp_ski" "${PROJECT_SOURCE_DIR}/aw901_dp_ski/output")
add_subdirectory("${PROJECT_SOURCE_DIR}/aw905_greedy_intervals" "${PROJECT_SOURCE_DIR}/aw905_greedy_intervals/output")


